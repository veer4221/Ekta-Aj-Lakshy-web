{"version":3,"sources":["helper/urlConfig.js","helper/axios.js","api/index.js","Redux/Actions/post.action.js","components/News/PostCard.js","page/News.js"],"names":["api","axiosIntance","axios","create","baseURL","interceptors","request","use","req","response","res","error","console","log","status","localStorage","clear","Promise","reject","getAllPostAPI","page","limit","keyword","get","getPostListAction","dispatch","a","type","postContants","VIEW_ALL_POST_REQUEST","success","data","count","rows","VIEW_ALL_POST_SUCCESS","payload","VIEW_ALL_POST_FAILURE","ViewMore","lazy","PostCard","className","style","boxShadow","borderRadius","effect","src","image","alt","height","width","fontSize","creater","color","title","line","element","truncateText","text","content","fallback","Image","News","post","useSelector","state","useDispatch","React","useState","setPage","rowsPerPage","setCount","Date","reloadAgain","postRows","setPostRows","useEffect","getAllProduct","Math","floor","fontFamily","map","Pagination","onChange","e","value","shape"],"mappings":"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","file":"static/js/18.8427d7fd.chunk.js","sourcesContent":["const baseUrl = 'http://3.142.246.46:5000'\n\nexport const api = `${baseUrl}/admin/api`\n","import axios from \"axios\";\nimport { api } from \"./urlConfig\";\n\nconst axiosIntance = axios.create({\n  baseURL: api,\n});\n\naxiosIntance.interceptors.request.use((req) => {\n  return req;\n});\n\naxiosIntance.interceptors.response.use(\n  (res) => {\n    return res;\n  },\n  (error) => {\n    console.log(error.response);\n    const status = error.response ? error.response.status : 500;\n    if (status && status === 500) {\n      localStorage.clear();\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosIntance;\n","import axios from \"../helper/axios\";\n\nexport const getPostByIdAPI = (id) => axios.get(`/v1/post/getPost?id=${id}`);\nexport const getAllPostAPI = (page, limit, keyword) =>\n  axios.get(\n    `v1/post/getAllPost?page=${page}&limit=${limit}&keyword=${keyword}`\n  );\n","import { authConstants, postContants } from \"../constants\";\nimport axios from \"../../helper/axios\";\nimport {\n  createPostAPI,\n  getAllPostAPI,\n  getPostByIdAPI,\n  removePostAPI,\n} from \"../../api/index\";\n\nexport const resetPostStateAction = () => {\n  return async (dispatch) => {\n    dispatch({ type: postContants.RESET_STATE });\n  };\n};\n\nexport const getPostListAction = (page, limit, keyword) => {\n  return async (dispatch) => {\n    dispatch({ type: postContants.VIEW_ALL_POST_REQUEST });\n    console.log(\"action\", keyword);\n    const res = await getAllPostAPI(page, limit, keyword);\n    const { success } = res.data;\n\n    if (res.status === 200 && success == true) {\n      const { count, rows, success } = res.data;\n      dispatch({\n        type: postContants.VIEW_ALL_POST_SUCCESS,\n        payload: { count, rows, success },\n      });\n    }\n    if (res.status === 200 && success == false) {\n      const { error } = res.data;\n\n      dispatch({\n        type: postContants.VIEW_ALL_POST_FAILURE,\n        payload: { error },\n      });\n    }\n  };\n};\n\nexport const viewPostAction = (id) => {\n  return async (dispatch) => {\n    dispatch({ type: postContants.VIEW_POST_REQUEST });\n    const res = await getPostByIdAPI(id);\n    console.log(res.data.post);\n    const { success } = res.data;\n    if (res.status === 200 && success == true) {\n      const { post } = res.data;\n      dispatch({\n        type: postContants.VIEW_POST_SUCCESS,\n        payload: { postInfo: post },\n      });\n    }\n  };\n};\n","import React, { lazy, Suspense } from \"react\";\r\nimport TextTruncate from \"react-text-truncate\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nconst ViewMore = lazy(() => import(\"../HomePage/Post/ViewMore\"));\r\n\r\n// import \"../../../style/aboutUsMtextView.css\";\r\n\r\nconst PostCard = ({ data }) => {\r\n  return (\r\n    <>\r\n      <div className=\"col-md-4 col-sm-6 \">\r\n        <div\r\n          className=\"single-blog\"\r\n          style={{\r\n            boxShadow: \"rgb(0 0 0 / 35%) 0px 8px 20px 7px\",\r\n            borderRadius: \"10px 10px\",\r\n          }}\r\n        >\r\n          <figure>\r\n            <LazyLoadImage\r\n              effect=\"blur\"\r\n              src={\r\n                data && data.image\r\n                  ? `https://health-image-maruti.s3.us-east-2.amazonaws.com/${\r\n                      data && data.image\r\n                    }`\r\n                  : `https://health-image-maruti.s3.us-east-2.amazonaws.com/ektaej_laksh/Post/2021/8/7/fmHA6zZkipwfhaQ.png`\r\n              }\r\n              alt=\"img\"\r\n              height=\"300px\"\r\n              width=\"100%\"\r\n            />\r\n          </figure>\r\n          <div className=\"blog-detail \" style={{ fontSize: \"larger\" }}>\r\n            <small>{data.creater}</small>\r\n            <h4 style={{ color: \"rgb(172, 24, 24)\" }}>|| {data.title} ||</h4>\r\n            {/* <p style={{ color: \"rgb(172, 24, 24)\" }}>{data.Information}</p> */}\r\n            <TextTruncate\r\n              line={3}\r\n              element=\"p\"\r\n              truncateText=\"...\"\r\n              text={data.content}\r\n            />\r\n            <div className=\"link\">\r\n              <Suspense fallback={<div>Loading...</div>}>\r\n                <ViewMore\r\n                  Image={data.image}\r\n                  title={data.title}\r\n                  content={data.content}\r\n                />\r\n              </Suspense>\r\n              <i className=\"fas fa-long-arrow-alt-right\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","import React, { useEffect } from \"react\";\r\nimport PostCard from \"../components/News/PostCard\";\r\nimport \"../style/aboutUsMtextView.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getPostListAction,\r\n  resetPostStateAction,\r\n} from \"../Redux/Actions/index\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport \"../style/News.css\";\r\n\r\nconst News = () => {\r\n  const post = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = React.useState(1);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(3);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [count, setCount] = React.useState();\r\n  const [reloadAgain, setReloadAgain] = React.useState(new Date());\r\n  const [userRows, setUserRows] = React.useState();\r\n  const [keyword, setKeyword] = React.useState(\"\");\r\n  const [postRows, setPostRows] = React.useState();\r\n  useEffect(() => {\r\n    console.log(post.getAllProduct);\r\n    setCount(Math.floor(post.getAllProduct.count / rowsPerPage + 1));\r\n    setPostRows(post.getAllProduct.rows);\r\n  }, [post.getAllProduct]);\r\n  useEffect(() => {\r\n    dispatch(getPostListAction(page, rowsPerPage, keyword));\r\n  }, [page, rowsPerPage, keyword, reloadAgain]);\r\n  return (\r\n    <>\r\n      <section className=\"our-blog page \">\r\n        <div className=\"container \">\r\n          <div className=\"row session-title\">\r\n            <h2 style={{ fontFamily: \"Samarkan\", color: \"rgb(172, 24, 24)\" }}>\r\n              {\" \"}\r\n              Post{\" \"}\r\n            </h2>\r\n          </div>\r\n          <div className=\"blog-row row\">\r\n            {postRows && postRows.map((data) => <PostCard data={data} />)}\r\n          </div>\r\n          <div>\r\n            <Pagination\r\n              count={count}\r\n              onChange={(e, value) => setPage(value)}\r\n              shape=\"rounded\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default News;\r\n"],"sourceRoot":""}