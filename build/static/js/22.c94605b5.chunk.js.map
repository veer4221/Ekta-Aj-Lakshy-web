{"version":3,"sources":["components/HomePage/AboutUsSangathan/mobile/ViewUsMobile/ViewUs.js","components/HomePage/AboutUsSangathan/Web/AboutUsSangathanSubComponunt/AboutUsBox.js","../node_modules/@material-ui/core/esm/Grid/Grid.js"],"names":["TabsComp","lazy","DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","disableTypography","className","variant","onClick","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","ViewUs","info","React","useState","open","setOpen","handleClose","width","style","marginLeft","marginRight","marginBottom","backgroundImage","id","dividers","fallback","autoFocus","AboutUsBox","icon","titel","container","item","xs","textAlign","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","Grid","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classNameProp","_props$component","component","Component","_props$container","_props$direction","direction","_props$item","justify","_props$justifyContent","justifyContent","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","_props$zeroMinWidth","zeroMinWidth","_objectWithoutProperties","clsx","_extends","StyledGrid","boxSizing","display","flexWrap","minWidth","flexDirection","breakpoint","styles","forEach","themeSpacing","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name"],"mappings":"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","file":"static/js/22.c94605b5.chunk.js","sourcesContent":["import React, { useEffect, lazy, Suspense } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nconst TabsComp = lazy(() => import(\"./Tabs/TabsComp\"));\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function ViewUs({ info }) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"ourBtn \">\r\n        <Button\r\n          width=\"100%\"\r\n          onClick={handleClickOpen}\r\n          style={{\r\n            marginLeft: \"10%\",\r\n            color: \"white\",\r\n            marginRight: \"40px\",\r\n            marginBottom: \"30px\",\r\n            width: \"80%\",\r\n\r\n            backgroundImage:\r\n              \"radial-gradient(circle, #c26603, #ba5d06, #b15508, #a84d0a, #9f450b)\",\r\n          }}\r\n        >\r\n          || View More ||\r\n        </Button>\r\n      </div>\r\n      {/* <Button variant=\"outlined\" color=\"primary\">\r\n        Open dialog\r\n      </Button> */}\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          About Us\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <TabsComp />\r\n          </Suspense>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            HomePage\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Grid, Card, Box, Divider, Button } from \"@material-ui/core\";\r\nimport ViewUs from \"../../mobile/ViewUsMobile/ViewUs\";\r\n\r\nconst AboutUsBox = ({ icon, titel }) => {\r\n  return (\r\n    <div>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <h1 style={{ textAlign: \"center\", color: \"rgb(133, 6, 6)\" }}>\r\n            || About Us ||\r\n          </h1>\r\n          <hr></hr>\r\n          <h3 style={{ textAlign: \"center\", color: \"rgb(133, 6, 6)\" }}>\r\n            18 Varan Eksathe<br></br>Hindutv mate\r\n          </h3>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n          <ViewUs info={`pc`} />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutUsBox;\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"center\"`. */\n    'justify-content-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"flex-end\"`. */\n    'justify-content-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"space-between\"`. */\n    'justify-content-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"space-around\"`. */\n    'justify-content-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"space-evenly\"`. */\n    'justify-content-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      justify = props.justify,\n      _props$justifyContent = props.justifyContent,\n      justifyContent = _props$justifyContent === void 0 ? 'flex-start' : _props$justifyContent,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"justifyContent\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], (justify || justifyContent) !== 'flex-start' && classes[\"justify-content-xs-\".concat(String(justify || justifyContent))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   * @deprecated Use `justifyContent` instead, the prop was renamed\n   */\n  justify: deprecatedPropType(PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']), 'Use `justifyContent` instead, the prop was renamed.'),\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justifyContent: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justifyContent: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;"],"sourceRoot":""}